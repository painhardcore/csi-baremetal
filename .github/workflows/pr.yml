name: Validate commit

on: [push, pull_request]

jobs:

  build:
    name: Build && test
    runs-on: ubuntu-20.04
    
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: install all required deps
      run:  sudo apt-get update && sudo apt-get install -y wget git gcc tar lvm2 curl unzip make apt-transport-https gnupg2 curl apt-utils
        
    - name: install all required deps
      run:  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - && \
        echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list && \
        sudo apt-get update && \
        sudo apt-get install -y kubectl && \
        wget -P /tmp https://golang.org/dl/go1.15.3.linux-amd64.tar.gz && \
        sudo tar -C /usr/local -xzf /tmp/go1.15.3.linux-amd64.tar.gz && \
        rm /tmp/go1.15.3.linux-amd64.tar.gz && \
        wget -O golangci-lint.deb https://github.com/golangci/golangci-lint/releases/download/v1.32.1/golangci-lint-1.32.1-linux-amd64.deb && \
        sudo dpkg -i golangci-lint.deb && \
        mkdir -p proto_3.11.0 && \
        curl -L -O https://github.com/protocolbuffers/protobuf/releases/download/v3.11.0/protoc-3.11.0-linux-x86_64.zip && \
        unzip protoc-3.11.0-linux-x86_64.zip -d proto_3.11.0/ && \
        mv proto_3.11.0/bin/protoc /usr/bin/protoc && \
        protoc --version && \
        rm -rf  proto_3.11.0 && \
        rm protoc-* && \
        go get github.com/golang/protobuf/protoc-gen-go@v1.3 && \
        go get sigs.k8s.io/controller-tools/cmd/controller-gen@v0.2.2 

    - name: Compile proto files
      run:  make compile-proto

    - name: Generate CRD
      run:  make generate-deepcopy

    - name: Get dependencies
      run:  make dependency

    - name: Lint
      run: make lint

    - name: test
      run: CI=false make test

    - name: Build
      run: make build
