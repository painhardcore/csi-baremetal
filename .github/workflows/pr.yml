name: PR validation

on:
  push:
  pull_request:
    branches: [ master ]
env:
  go_version: '1.16.0'
  golangci_version: '1.37.0'
jobs:
  lint-test:
    if: "contains(github.event.head_commit.message, '[lint-test]')"
    name: Validate code and charts
    runs-on: ubuntu-18.04
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Prepare Golang 
      uses: actions/setup-go@v2
      with:
        go-version: ${{env.go_version}}

    - name: Load dep cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: go-dep-${{ env.go_version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: go-dep-${{ env.go_version }}-
          
    - name: Load build and linter cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/.cache/golangci-lint
        key: go-build-${{ env.go_version }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/pkg') }}
        restore-keys: |
          go-build-${{ env.go_version }}-${{ hashFiles('**/go.sum') }}
          go-build-${{ env.go_version }}-
        
    - name: Get dependencies
      run:  make dependency
      
    - name: Install golangci-lint
      run: |
        wget -q -O golangci-lint.deb https://github.com/golangci/golangci-lint/releases/download/v${{ env.golangci_version }}/golangci-lint-${{ env.golangci_version }}-linux-amd64.deb
        sudo dpkg -i golangci-lint.deb
        
    - name: Lint code
      run: GOGC=300 make lint
      
    - name: Lint charts
      run: make lint-charts
      
    - name: Run Tests
      run: CI=false make test
    
    - name: Coverage
      run: make coverage
      
    - name: Build binaries
      run: |
        make DRIVE_MANAGER_TYPE=basemgr build
        make DRIVE_MANAGER_TYPE=loopbackmgr build-drivemgr
        make DRIVE_MANAGER_TYPE=idracmgr build-drivemgr

    - uses: helm/kind-action@v1.1.0
      with:
        version: "v0.8.1"
        wait: "1s" # not wasting time here

    - name: Get kind cluster information
      run: |
          kubectl cluster-info
          kubectl get pods --all-namespaces
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}

    - name: Test sanity
      run: |
        helm install baremetal-csi-plugin ./charts/baremetal-csi-plugin
        helm install scheduler-extender ./charts/scheduler-extender
        helm install csibm-operator ./charts/csibm-operator
        make test-sanity
        kubectl get pods --all-namespaces
        
  gen-files-validate:
    if: "contains(github.event.head_commit.message, '[gen]')"
    name: Generated files should be consistent
    runs-on: ubuntu-18.04
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Prepare Golang 
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.go_version }}
  
    - name: Compile proto files
      run: make install-compile-proto

    - name: Generate CRD
      run: |
        make install-controller-gen
        make generate-deepcopy

    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v5.5
      id: changed_files
      with:
        files: |
           api/generated/v1/*.go
           api/v1/*/*.go
           '.(go)$'
           
    - name: Display changed files
      if: steps.changed_files.outputs.files_changed == 'true'
      run: |
        echo "Changed files: ${{ steps.changed_files.outputs.changed_files }}"
        
    - name: Perform action when files change.
      if: steps.changed_files.outputs.files_changed == 'true'
      run: |
        exit 1
# try
  build:
    runs-on: ubuntu-18.04
    if: "contains(github.event.head_commit.message, '[build]')"
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Load dep cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: go-dep-${{ env.go_version }}-${{ hashFiles('**/go.sum') }}
    
    - name: Get dependencies
      run:  make dependency

    - name : Build binary
      run: |
        make DRIVE_MANAGER_TYPE=basemgr build
        make build DRIVE_MANAGER_TYPE=loopbackmgr
        
    - name: Build images
      run: |
        make DRIVE_MANAGER_TYPE=loopbackmgr REGISTRY=docker.pkg.github.com/${GITHUB_REPOSITORY} images
        make DRIVE_MANAGER_TYPE=basemgr REGISTRY=docker.pkg.github.com/${GITHUB_REPOSITORY} images
        docker images
    - name: Push images
      run: |
        docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }}  docker.pkg.github.com
        make DRIVE_MANAGER_TYPE=loopbackmgr REGISTRY=docker.pkg.github.com/${GITHUB_REPOSITORY} push-drivemgr 
        make DRIVE_MANAGER_TYPE=basemgr REGISTRY=docker.pkg.github.com/${GITHUB_REPOSITORY} push
  # lol
  e2e:
    runs-on: ubuntu-18.04
    if: "contains(github.event.head_commit.message, '[e2e]')"
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      
    - name: LVL2 install
      run: |
        sudo apt-get update
        sudo apt-get install -y lvm2

    - name: CUSTOM KIND
      run: |
        wget -O kind https://github.com/painhardcore/builder/releases/download/0.0.1-alpha/kind_v0.8.1
        sudo chmod +x kind
        sudo mv kind /usr/bin
        kind create cluster --config test/kind/kind.yaml
  
    - name: Get kind cluster information
      run: |
          kubectl cluster-info
          kubectl get pods --all-namespaces
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}